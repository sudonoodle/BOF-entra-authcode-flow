#pragma once

#include <windows.h>

/* win API imports (KERNEL32, USER32, WINHTTP) */
DECLSPEC_IMPORT WINBASEAPI BOOL WINAPI KERNEL32$CreateProcessA(LPCSTR, LPSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES, BOOL, DWORD, LPVOID, LPCSTR, LPSTARTUPINFOA, LPPROCESS_INFORMATION);
DECLSPEC_IMPORT WINBASEAPI VOID WINAPI KERNEL32$Sleep(DWORD);
DECLSPEC_IMPORT WINBASEAPI DWORD WINAPI KERNEL32$GetLastError(VOID);
DECLSPEC_IMPORT WINBASEAPI BOOL WINAPI KERNEL32$CloseHandle(HANDLE);
DECLSPEC_IMPORT WINBASEAPI INT WINAPI USER32$GetWindowTextA(HWND, LPSTR, INT);
DECLSPEC_IMPORT WINBASEAPI BOOL WINAPI USER32$IsWindowVisible(HWND);
DECLSPEC_IMPORT WINUSERAPI HWND WINAPI USER32$GetTopWindow(HWND hWnd);
DECLSPEC_IMPORT WINUSERAPI HWND WINAPI USER32$GetWindow(HWND hWnd, UINT uCmd);
DECLSPEC_IMPORT WINUSERAPI BOOL WINAPI USER32$SendMessageTimeoutW(HWND, UINT, WPARAM, LPARAM, DWORD, DWORD, LPDWORD);
DECLSPEC_IMPORT WINHTTPAPI HINTERNET WINAPI WINHTTP$WinHttpOpen(LPCWSTR, DWORD, LPCWSTR, LPCWSTR, DWORD);
DECLSPEC_IMPORT WINHTTPAPI HINTERNET WINAPI WINHTTP$WinHttpConnect(HINTERNET, LPCWSTR, INTERNET_PORT, DWORD);
DECLSPEC_IMPORT WINHTTPAPI HINTERNET WINAPI WINHTTP$WinHttpOpenRequest(HINTERNET, LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR*, DWORD);
DECLSPEC_IMPORT WINHTTPAPI BOOL WINAPI WINHTTP$WinHttpAddRequestHeaders(HINTERNET, LPCWSTR, DWORD, DWORD);
DECLSPEC_IMPORT WINHTTPAPI BOOL WINAPI WINHTTP$WinHttpSendRequest(HINTERNET, LPCWSTR, DWORD, LPVOID, DWORD, DWORD, DWORD_PTR);
DECLSPEC_IMPORT WINHTTPAPI BOOL WINAPI WINHTTP$WinHttpReceiveResponse(HINTERNET, LPVOID);
DECLSPEC_IMPORT WINHTTPAPI BOOL WINAPI WINHTTP$WinHttpReadData(HINTERNET, LPVOID, DWORD, LPDWORD);
DECLSPEC_IMPORT WINHTTPAPI BOOL WINAPI WINHTTP$WinHttpCloseHandle(HINTERNET);

/* some definitions taken from TrustedSec's bofdefs.h */
#define strstr MSVCRT$strstr
DECLSPEC_IMPORT char *__cdecl MSVCRT$strstr(const char *, const char *);

#define snprintf MSVCRT$_snprintf
DECLSPEC_IMPORT int __cdecl MSVCRT$_snprintf(LPSTR, size_t, LPCSTR, ...);

#define strncpy_s MSVCRT$strncpy_s
DECLSPEC_IMPORT errno_t __cdecl MSVCRT$strncpy_s(LPSTR, size_t, LPCSTR, size_t);

#define strlen MSVCRT$strlen
DECLSPEC_IMPORT size_t __cdecl MSVCRT$strlen(const char *str);

#define strchr MSVCRT$strchr
DECLSPEC_IMPORT LPSTR __cdecl MSVCRT$strchr(LPSTR, int);
